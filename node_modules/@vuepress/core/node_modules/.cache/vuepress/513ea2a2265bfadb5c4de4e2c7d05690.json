{"remainingRequest":"/home/aks/projects/ag/acorn-globus-handbook/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/aks/projects/ag/acorn-globus-handbook/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/aks/projects/ag/acorn-globus-handbook/node_modules/vue-loader/lib/index.js??ref--1-1!/home/aks/projects/ag/acorn-globus-handbook/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/aks/projects/ag/acorn-globus-handbook/src/guide/the-git-flow.md?vue&type=template&id=2a37b468&","dependencies":[{"path":"/home/aks/projects/ag/acorn-globus-handbook/src/guide/the-git-flow.md","mtime":1656057042597},{"path":"/home/aks/projects/ag/acorn-globus-handbook/node_modules/cache-loader/dist/cjs.js","mtime":1656052286369},{"path":"/home/aks/projects/ag/acorn-globus-handbook/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1641372359026},{"path":"/home/aks/projects/ag/acorn-globus-handbook/node_modules/cache-loader/dist/cjs.js","mtime":1656052286369},{"path":"/home/aks/projects/ag/acorn-globus-handbook/node_modules/vue-loader/lib/index.js","mtime":1641372359026},{"path":"/home/aks/projects/ag/acorn-globus-handbook/node_modules/@vuepress/markdown-loader/index.js","mtime":1656052286381}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}